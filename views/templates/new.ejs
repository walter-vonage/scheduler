<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Create New Template</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous" />
    <script>
        async function postFormDataAsJson({ url, formData }) {
            const plainFormData = Object.fromEntries(formData.entries());
            plainFormData.rcsEnabled = formData.get('rcsEnabled') === 'on'; // Convert checkbox value to boolean
            const formDataJsonString = JSON.stringify(plainFormData);
            const fetchOptions = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    Accept: 'application/json',
                },
                body: formDataJsonString,
            };
            const response = await fetch(url, fetchOptions);
            if (!response.ok) {
                const errorMessage = await response.text();
                throw new Error(errorMessage);
            }
            return response.json();
        }

        async function handleSubmit(event) {
            event.preventDefault();
            const form = event.currentTarget;
            const url = form.action;
            try {
                const formData = new FormData(form);
                const responseData = await postFormDataAsJson({ url, formData });
                console.log({ responseData });
                if (responseData.newTemplate) {
                    alert('Created a new template!');
                    window.location.replace('/templates');
                } else {
                    alert('Failed creation. Please check your data.');
                }
            } catch (error) {
                console.error(error);
            }
        }
    </script>
</head>

<body>
    <div class="container">
        <div class="row">
            <div class="col">
                <a href="/templates">Back</a>
                <h1 class="mt-3">Create New Template</h1>
                <form id="mainForm" method="post" action="/api/templates">
                    <div class="mb-3">
                        <label for="id" class="form-label" aria-describedby="templateIdHelp">Template ID</label>
                        <input type="text" class="form-control" id="id" name="id" />
                        <div id="templateIdHelp" class="form-text">
                            The template ID is referenced in the CSV file in the column 'ID_SMSTEXT'. <br />
                            If an already existing template ID is used, it will be overwritten when saving.
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="senderIdField" class="form-label">Sender ID field name</label>
                        <input type="text" class="form-control" id="senderIdField" name="senderIdField" aria-describedby="senderIdFieldHelp" />
                        <div id="senderIdFieldHelp" class="form-text">
                            The name of the CSV field that contains the SMS sender ID<br />
                            Note for the CSV file: The content of the field itself may be a maximum of 11 characters long and may only consist of letters and numbers. Spaces are not allowed. More information at:
                            <a href="https://developer.vonage.com/messaging/sms/guides/custom-sender-id">https://developer.vonage.com/messaging/sms/guides/custom-sender-id</a>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="text" class="form-label">SMS Text</label>
                        <textarea class="form-control" id="text" name="text" aria-describedby="textHelp" rows="3"></textarea>
                        <div class="mt-3 mb-2">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="rcsEnabled" name="rcsEnabled" />
                                <label class="form-check-label" for="rcsEnabled"> RCS enabled </label>
                            </div>
                        </div>

                        <div id="textHelp" class="form-text">
                            This is the complete SMS content. It can reference CSV fields, which are then automatically populated for each user.<br />
                            References to CSV fields are inserted using curly brackets in the following format: <code>{{ COLUMN_NAME }}</code><br />
                            The capitalization of column names should be observed.
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary float-end">Save Template</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        const mainForm = document.getElementById('mainForm');
        mainForm.addEventListener('submit', handleSubmit);
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8"
        crossorigin="anonymous"></script>
</body>

</html>