<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Create New Template</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT"
      crossorigin="anonymous"
    />
    <script>
      async function postFormDataAsJson({ url, formData }) {
        const plainFormData = Object.fromEntries(formData.entries());
        plainFormData.rcsEnabled = formData.get('rcsEnabled') === 'on'; // Convert checkbox value to boolean
        const formDataJsonString = JSON.stringify(plainFormData);

        const fetchOptions = {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
          body: formDataJsonString,
        };

        const response = await fetch(url, fetchOptions);

        if (!response.ok) {
          const errorMessage = await response.text();
          throw new Error(errorMessage);
        }

        return response.json();
      }

      async function handleSubmit(event) {
        event.preventDefault();

        const form = event.currentTarget;
        const url = form.action;
        try {
          const formData = new FormData(form);
          const responseData = await postFormDataAsJson({ url, formData });

          console.log({ responseData });

          if (responseData.newTemplate) {
            alert('Created a new template!');
            window.location.replace('/templates');
          } else {
            alert('Failed creation. Please check your data.');
          }
        } catch (error) {
          console.error(error);
        }
      }
    </script>
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="col">
          <a href="/templates">Zurück</a>
          <h1 class="mt-3">Neues Template erstellen</h1>
          <form id="mainForm" method="post" action="/api/templates">
            <div class="mb-3">
              <label for="id" class="form-label" aria-describedby="templateIdHelp">Template ID</label>
              <input type="text" class="form-control" id="id" name="id" />
              <div id="templateIdHelp" class="form-text">
                Die Template ID wird in der CSV Datei in der Spalte "ID_SMSTEXT" referenziert.<br />Wenn eine bereits bestehende Template ID
                benutzt wird, dann wird diese beim Speichern überschrieben.
              </div>
            </div>
            <div class="mb-3">
              <label for="senderIdField" class="form-label">Sender ID Feldname</label>
              <input type="text" class="form-control" id="senderIdField" name="senderIdField" aria-describedby="senderIdFieldHelp" />
              <div id="senderIdFieldHelp" class="form-text">
                Der Name des CSV Feldes, welches die SMS Absenderkennung enthält.<br />Hinweis für die CSV Datei: Der Inhalt des Feldes
                selbst darf maximal 11 Zeichen lang sein und nur aus Buchstaben und Zahlen bestehen. Es sind keine Leerzeichen erlaubt. Mehr
                Infos unter:<a href="https://developer.vonage.com/messaging/sms/guides/custom-sender-id"
                  >https://developer.vonage.com/messaging/sms/guides/custom-sender-id</a
                >
              </div>
            </div>
            <div class="mb-3">
              <label for="text" class="form-label">SMS Text</label>
              <textarea class="form-control" id="text" name="text" aria-describedby="textHelp" rows="3"></textarea>
              <div class="mt-3 mb-2">
                <div class="form-check">
                  <input class="form-check-input" type="checkbox" id="rcsEnabled" name="rcsEnabled" />
                  <label class="form-check-label" for="rcsEnabled"> RCS aktiviert </label>
                </div>
              </div>

              <div id="textHelp" class="form-text">
                Dies ist der komplette SMS Inhalt. Es kann auf CSV Felder referenziert werden, die dann automatisch pro Nutzer befüllt
                werden.<br />Referenzen auf CSV Felder werden mit geschweiften Klammern im folgenden Format eingefügt:
                <code>{{ SPALTENNAME }}</code
                ><br />
                Groß- und Kleinschreibung von Spaltennamen sollten beachtet werden.
              </div>
            </div>

            <button type="submit" class="btn btn-primary float-end">Template Speichern</button>
          </form>
        </div>
      </div>
    </div>

    <script>
      const mainForm = document.getElementById('mainForm');
      mainForm.addEventListener('submit', handleSubmit);
    </script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
